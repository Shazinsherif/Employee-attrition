1. Data Exploration and Cleaning:
-Load the dataset
-Explore the features and their distributions
-Check for missing values and handle them if necessary
-Check for outliers and anomalies


# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
employee_data = pd.read_csv('employee_attrition.csv')

# Explore the dataset
print(employee_data.head())
print(employee_data.info())
print(employee_data.describe())

# Check for missing values
print(employee_data.isnull().sum())

# Check for outliers
plt.figure(figsize=(10,6))
sns.boxplot(data=employee_data)
plt.xticks(rotation=45)
plt.show()


2. Exploratory Data Analysis (EDA):
-Visualize the relationships between features and attrition
-Identify correlations between features
-Explore any patterns or trends in the data


# Visualize relationships between features and attrition
plt.figure(figsize=(12, 6))
sns.countplot(x='Age', hue='Attrition', data=employee_data)
plt.title('Attrition by Age')
plt.xlabel('Age')
plt.ylabel('Count')
plt.show()

# Correlation heatmap
plt.figure(figsize=(12, 8))
sns.heatmap(employee_data.corr(), annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Heatmap')
plt.show()


3. Data Preprocessing:
-Encode categorical variables
-Split the dataset into training and testing sets


# Encode categorical variables
employee_data = pd.get_dummies(employee_data, drop_first=True)

# Split the dataset into training and testing sets
from sklearn.model_selection import train_test_split

X = employee_data.drop('Attrition_Yes', axis=1)
y = employee_data['Attrition_Yes']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

4. Model Building:
-Choose appropriate algorithms (e.g., Logistic Regression, Random Forest, etc.)
-Train the model on the training data
-Evaluate the model's performance on the testing data


# Model building
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, accuracy_score

logreg_model = LogisticRegression()
logreg_model.fit(X_train, y_train)

# Predictions
predictions = logreg_model.predict(X_test)

# Evaluate the model
print(classification_report(y_test, predictions))
print("Accuracy:", accuracy_score(y_test, predictions))



Conclusion:
After performing the analysis on the employee attrition dataset, several key insights have been gained:

Attrition Patterns by Age: The analysis revealed that attrition rates tend to vary across different age groups. Younger employees, particularly those in their twenties, exhibit higher attrition rates compared to older age groups. This suggests that age might play a significant role in determining employee retention strategies, with a focus on understanding and addressing the needs of younger employees.

Correlation Analysis: The correlation heatmap provided insights into the relationships between various features and attrition. Factors such as job satisfaction, work environment, and job involvement showed notable correlations with attrition. This highlights the importance of these factors in influencing employee retention and turnover rates.

Model Performance: The logistic regression model achieved a satisfactory accuracy score in predicting employee attrition based on the provided features. However, there is room for improvement, and alternative models such as Random Forest or Gradient Boosting could be explored for potentially better performance.
